{"version":3,"sources":["assets/logo.svg","assets/basket.svg","App/Footer.jsx","App/Nav.jsx","App/Components/CenteredImage.jsx","App/OneProduct/Components/ProductTitle.jsx","App/OneProduct/Components/ProductSpec.jsx","App/Components/Button.jsx","App/Components/PriceDisplay.jsx","App/OneProduct/Components/QuantitySelect.jsx","App/OneProduct/Components/CartManager.jsx","App/OneProduct/Components/ProductDescription.jsx","App/OneProduct/Components/Specifications.jsx","App/OneProduct/OneProduct.jsx","App/ProductPage/ProductCard.jsx","App/ProductPage/ProductPage.jsx","App/App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Wrapper","styled","div","Footer","LogoStyle","img","BasketWrapper","BasketCount","props","totalItems","Nav","i","cartItems","length","quantity","getNumberofItems","to","src","Logo","title","Basket","ImageWrapper","height","ProductImage","CenteredImage","url","Text","h2","ProductTitle","data","p","ProductSpec","power","ButtonStyle","button","Button","onClick","handleAddToCart","text","Number","fontSize","lineHeight","PriceDisplay","str","price","toString","pounds","substring","pence","Title","ButtonsContainer","qty","value","Quantity","QuantitySelect","onTrigger","e","changeQuantity","PriceWrapper","CartManager","selectQuantity","ProductDescription","Table","table","Specifications","brand","weight","width","modelCode","colour","ProductOverview","ProductInfo","OneProduct","queryBody","match","params","id","useState","isLoading","setIsLoading","undefined","product","setProduct","useEffect","fetch","method","headers","body","JSON","stringify","query","then","res","json","setQty","imgUrl","name","toBeAdded","addToCart","target","description","OneCard","CardHero","ProductDetails","GoToButton","ProductCard","ProductPage","AppView","AppContainer","App","updateCartItems","itemsToAdd","console","log","exist","find","x","map","path","exact","component","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f13d62a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee26f140.svg\";","module.exports = __webpack_public_path__ + \"static/media/basket.563b5bb0.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 1000px;\n  overflow: hidden;\n  height: 10vh;\n  color: #8094b4;\n  background-color: #02193b;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n\n  span {\n    font-size: 10px;\n    line-height: 17px;\n    margin-left: 15px;\n  }\n`;\n\nconst Footer = () => {\n  return (\n    <Wrapper>\n      <span>\n        Octopus Energy is a company registered in England and Wales.\n        <br />\n        Registered number: 09263424 Registered address: 33 Holborn, London, EC1N\n        2HT. Trading office: 20-24 Broadwick Street, London, W1F 8HT\n      </span>\n    </Wrapper>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Logo from \"../assets/logo.svg\";\nimport Basket from \"../assets/basket.svg\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 1000px;\n  display: flex;\n  height: 5vh;\n  width: 100vw;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #05102a;\n`;\n\nconst LogoStyle = styled.img`\n  height: 20px;\n  margin: 7px;\n`;\n\nconst BasketWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst BasketCount = styled.div`\n  height: 20px;\n  width: 20px;\n  background-color: #fa1c7b;\n  border-radius: 50%;\n  color: white;\n  text-align: center;\n  font-weight: bold;\n  ${(props) => (!props.totalItems ? \"display: none\" : null)}\n`;\n\nconst Nav = (props) => {\n  let totalItems = 0;\n  const getNumberofItems = () => {\n    for (var i = 0; i < props.cartItems.length; i++) {\n      totalItems = totalItems + props.cartItems[i].quantity;\n      return totalItems;\n    }\n  };\n  getNumberofItems();\n\n  return (\n    <Wrapper>\n      <Link to=\"/\">\n        <LogoStyle src={Logo} />\n      </Link>\n\n      <BasketWrapper>\n        <BasketCount title=\"Basket Items\" totalItems={totalItems}>\n          {totalItems}\n        </BasketCount>\n        <LogoStyle src={Basket} />\n      </BasketWrapper>\n    </Wrapper>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ImageWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: ${(props) => props.height};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ProductImage = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n  position: absolute;\n`;\n\nconst CenteredImage = (props) => {\n  return (\n    <ImageWrapper height={props.height}>\n      <ProductImage src={props.url} />\n    </ImageWrapper>\n  );\n};\n\nexport default CenteredImage;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Text = styled.h2`\n  color: white;\n`;\n\nconst ProductTitle = (props) => {\n  return <Text>{props.data}</Text>;\n};\n\nexport default ProductTitle;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Text = styled.p`\n  color: #1d3b67;\n`;\n\nconst ProductSpec = (props) => {\n  return (\n    <Text>\n      {props.power}\n      {\" // Packet of \"}\n      {props.quantity}\n    </Text>\n  );\n};\n\nexport default ProductSpec;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ButtonStyle = styled.button`\n  height: 40px;\n  width: 100%;\n  max-width: 300px;\n  margin-top: 20px;\n  color: white;\n  background: linear-gradient(#ff61a9 45%, #fa1c7b 45%);\n  font-size: 20px;\n  font-weight: bold;\n  border: none;\n  border-radius: 2px; ;\n`;\n\nconst Button = (props) => {\n  return (\n    <ButtonStyle onClick={props.handleAddToCart}>{props.text}</ButtonStyle>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  font-weight: bold;\n`;\n\nconst Number = styled.div`\n  font-size: ${(props) => props.fontSize};\n  line-height: ${(props) => props.lineHeight};\n  color: white;\n`;\n\nconst PriceDisplay = (props) => {\n  let str = props.price.toString();\n  let pounds = str.substring(0, 2);\n  let pence = str.substring(2, 4);\n\n  return (\n    <Wrapper>\n      <Number fontSize={\"30px\"} lineHeight={\"27px\"}>\n        {pounds}\n      </Number>\n      <Number fontSize={\"20px\"} lineHeight={\"19px\"}>\n        .{pence}\n      </Number>\n    </Wrapper>\n  );\n};\n\nexport default PriceDisplay;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.p`\n  color: #1d3b67;\n  margin: 0;\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  height: 25px;\n  width: 25px;\n  border: none;\n  border-radius: 2px;\n  background-color: #1d3b67;\n  color: white;\n  font-size: 15px;\n  cursor: pointer;\n  ${(props) =>\n    (props.qty === 1) & (props.value === \"-\")\n      ? `background-color:#192B43 `\n      : `background-color: #36598D`};\n`;\n\nconst Quantity = styled.h2`\n  color: white;\n  margin: 0 5px;\n`;\n\nconst QuantitySelect = (props) => {\n  const onTrigger = (e) => {\n    props.changeQuantity(e);\n  };\n\n  return (\n    <Wrapper>\n      <Title>QTY</Title>\n      <ButtonsContainer>\n        <Button qty={props.qty} value=\"-\" onClick={onTrigger}>\n          -\n        </Button>\n        <Quantity title=\"Current quantity\">{props.qty}</Quantity>\n        <Button value=\"+\" onClick={onTrigger}>\n          +\n        </Button>\n      </ButtonsContainer>\n    </Wrapper>\n  );\n};\n\nexport default QuantitySelect;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../../Components/Button\";\nimport PriceDisplay from \"../../Components/PriceDisplay\";\nimport QuantitySelect from \"./QuantitySelect\";\n\nconst Wrapper = styled.div`\n  background-color: #05102a;\n  display: flex;\n  padding: 15px 30px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center; ;\n`;\nconst PriceWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nconst CartManager = (props) => {\n  return (\n    <Wrapper>\n      <PriceWrapper>\n        <PriceDisplay price={props.price} />\n        <QuantitySelect changeQuantity={props.selectQuantity} qty={props.qty} />\n      </PriceWrapper>\n      <Button text={\"Add to cart\"} handleAddToCart={props.handleAddToCart} />\n    </Wrapper>\n  );\n};\n\nexport default CartManager;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  background-color: #02193b;\n  color: white;\n  padding: 10px 30px;\n  font-size: 12px;\n`;\n\nconst ProductDescription = (props) => {\n  return (\n    <Wrapper>\n      <h2>Description</h2>\n      <p>{props.data}</p>\n    </Wrapper>\n  );\n};\n\nexport default ProductDescription;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  padding: 10px 30px;\n  color: white;\n  background-color: #05102a;\n`;\nconst Table = styled.table`\n  font-size: 12px;\n  margin: 0;\n\n  tr {\n    td {\n      padding: 7px 7px 7px 0;\n    }\n  }\n`;\n\nconst Specifications = (props) => {\n  return (\n    <Wrapper>\n      <h3>Specifications</h3>\n      <Table>\n        <tbody>\n          <tr>\n            <td>Brand</td>\n            <td>{props.brand}</td>\n          </tr>\n          <tr>\n            <td>Item weight</td>\n            <td>{props.weight}</td>\n          </tr>\n          <tr>\n            <td>Dimensions</td>\n            <td>\n              {props.height}x{props.width}x{props.length}\n            </td>\n          </tr>\n          <tr>\n            <td>Item model number</td>\n            <td>{props.modelCode}</td>\n          </tr>\n          <tr>\n            <td>Colour</td>\n            <td>{props.colour}</td>\n          </tr>\n        </tbody>\n      </Table>\n    </Wrapper>\n  );\n};\n\nexport default Specifications;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport CenteredImage from \"../Components/CenteredImage\";\nimport ProductTitle from \"./Components/ProductTitle\";\nimport ProductSpec from \"./Components/ProductSpec\";\nimport CartManager from \"./Components/CartManager\";\nimport ItemDescription from \"./Components/ProductDescription\";\nimport Specifications from \"./Components/Specifications\";\n\nconst ProductOverview = styled.div`\n  background: linear-gradient(#05102a 60%, #02193b 60%);\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n`;\n\nconst ProductInfo = styled.div`\n  padding: 0 30px 5px 30px;\n`;\n\nconst OneProduct = (props) => {\n  //define query body with dynamic id\n  let queryBody = `\n  query getProductById {\n    product(productId: ${props.match.params.id}) {\n    id\n    name\n    power\n    description\n    price\n    quantity\n    brand\n    weight\n    height\n    width\n    length\n    modelCode\n    colour\n    imgUrl\n    }\n  }`;\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [product, setProduct] = useState(undefined);\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/graphql\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        query: queryBody,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setIsLoading(false);\n        setProduct(res.data.product);\n        // console.log(res.data.product);\n      });\n  }, []);\n\n  let [qty, setQty] = useState(1);\n  //set number of items to be added to the cart\n  const selectQuantity = (e) => {\n    if (e.target.value === \"+\") {\n      setQty(qty + 1);\n    } else if ((e.target.value === \"-\") & (qty > 1)) {\n      setQty(qty - 1);\n    }\n  };\n\n  const addItemstoCart = () => {\n    //grab id and qty\n    let toBeAdded = { id: product.id, quantity: qty };\n    //update state in parent\n    props.addToCart(toBeAdded);\n  };\n\n  //return if loading\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  //return once loaded\n  return (\n    <>\n      {product && (\n        <>\n          <ProductOverview>\n            <CenteredImage height={\"310px\"} url={product.imgUrl} />\n            <ProductInfo>\n              <ProductTitle data={product.name} />\n              <ProductSpec power={product.power} quantity={product.quantity} />\n            </ProductInfo>\n          </ProductOverview>\n\n          <CartManager\n            cartItems={props.cartItems}\n            price={product.price}\n            qty={qty}\n            handleAddToCart={addItemstoCart}\n            selectQuantity={selectQuantity}\n          />\n\n          <ItemDescription data={product.description} />\n\n          <Specifications\n            brand={product.brand}\n            weight={product.weight}\n            height={product.height}\n            width={product.width}\n            length={product.length}\n            modelCode={product.modelCode}\n            colour={product.colour}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default OneProduct;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PriceDisplay from \"../Components/PriceDisplay\";\nimport CenteredImage from \"../Components/CenteredImage\";\nimport { Link } from \"react-router-dom\";\n\nconst OneCard = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  background-color: #02193b;\n  color: white;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nconst CardHero = styled.div`\n  width: 100%;\n\n  height: max-content;\n\n  img {\n    max-width: 100%;\n    max-height: 100%;\n  }\n`;\n\nconst ProductDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  padding: 10px;\n\n  h3 {\n    margin: 5px 0;\n  }\n  p {\n    margin: 5px 0 10px 0;\n  }\n`;\n\nconst GoToButton = styled.button`\n  width: 100%;\n  padding: 15px 0;\n  text-align: center;\n  background-color: #fa1c7b;\n  border: none;\n  color: white;\n  font-size: 20px;\n  cursor: pointer;\n`;\n\nconst ProductCard = (props) => {\n  return (\n    <OneCard>\n      <CardHero>\n        <CenteredImage height={\"250px\"} url={props.data.imgUrl} />\n        <ProductDetails>\n          <h3>{props.data.name}</h3>\n          <p>{props.data.brand}</p>\n          <PriceDisplay price={props.data.price} />\n        </ProductDetails>\n        <Link to={`/products/${props.data.id}`}>\n          <GoToButton>Go to product page</GoToButton>\n        </Link>\n      </CardHero>\n    </OneCard>\n  );\n};\n\nexport default ProductCard;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ProductCard from \"./ProductCard\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  min-height: 85vh;\n  background-color: #05102a;\n`;\n\nconst ProductPage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [product, setProduct] = useState(undefined);\n\n  let queryBody = `\n  query getProductById {\n    product(productId: 1) {\n      id\n      name\n      price\n      brand\n      imgUrl\n    }\n  }`;\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/graphql\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        query: queryBody,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setIsLoading(false);\n        setProduct(res.data.product);\n        // console.log(res.data.product);\n      });\n  }, []);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      {product && (\n        <Wrapper>\n          <ProductCard data={product} />\n        </Wrapper>\n      )}\n    </>\n  );\n};\n\nexport default ProductPage;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Footer from \"./Footer\";\nimport Nav from \"./Nav\";\nimport OneProduct from \"./OneProduct/OneProduct\";\nimport ProductPage from \"./ProductPage/ProductPage\";\n\nconst AppView = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  justify-content: center;\n  align-items: center;\n  background-color: #05102a;\n`;\n\nconst AppContainer = styled.div`\n  width: 100vw;\n  max-width: 1000px;\n`;\n\nconst App = () => {\n  //setting cart as array to push objects e.g. {id:1, quantity: 3}\n  const [cartItems, updateCartItems] = useState([]);\n\n  const addToCart = (itemsToAdd) => {\n    console.log(itemsToAdd.quantity + \" items added to the cart\");\n    //check if item already in cart\n    const exist = cartItems.find((x) => x.id === itemsToAdd.id);\n    if (exist) {\n      updateCartItems(\n        cartItems.map((x) =>\n          x.id === itemsToAdd.id\n            ? { ...exist, quantity: exist.quantity + itemsToAdd.quantity }\n            : x\n        )\n      );\n    } else {\n      updateCartItems([...cartItems, itemsToAdd]);\n    }\n  };\n\n  return (\n    <Router>\n      <AppView>\n        <Nav cartItems={cartItems} />\n\n        <AppContainer>\n          <Switch>\n            <Route path=\"/\" exact component={ProductPage} />\n            <Route\n              path=\"/products/:id\"\n              render={(props) => (\n                <OneProduct {...props} addToCart={addToCart} />\n              )}\n            />\n          </Switch>\n        </AppContainer>\n\n        <Footer />\n      </AppView>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}